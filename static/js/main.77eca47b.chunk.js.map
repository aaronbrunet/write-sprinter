{"version":3,"sources":["App.js","index.js"],"names":["App","useState","time","setTime","seconds","setSeconds","text","setText","trim","split","length","count","setCount","running","setRunning","paused","togglePaused","setCompleted","copyLabel","setCopyLabel","copyText","navigator","clipboard","writeText","setTimeout","useEffect","className","Math","floor","id","onChange","e","target","value","type","max","readOnly","parseInt","onClick","disabled","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77eca47b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nfunction App() {\r\n  const [time,setTime] = useState(0)\r\n  const [seconds,setSeconds] = useState(0)\r\n  const [text,setText] = useState('')\r\n  const [count,setCount] = useState(text.trim().split(' ').length)\r\n  const [running,setRunning] = useState(false)\r\n  const [paused,togglePaused] = useState(false)\r\n  const [completed,setCompleted] = useState(null)\r\n  const [copyLabel,setCopyLabel] = useState('ðŸ’¾ Copy')\r\n  \r\n  \r\n  const copyText = () => {\r\n    navigator.clipboard.writeText(text)\r\n    setCopyLabel('âœ… Copied!')\r\n    setTimeout(()=>{setCopyLabel('ðŸ’¾ Copy')},5000)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    text === '' ? setCount(0) : setCount(()=>text.trim().split(' ').length)\r\n  },[text])\r\n\r\n  useEffect(()=>{\r\n    if(seconds>0 && running){\r\n      setTimeout(()=>{\r\n        setSeconds(seconds - 1)\r\n      },1000)\r\n    }\r\n    if(seconds===0 && running){\r\n      setCompleted(true)\r\n      setRunning(false)\r\n    }\r\n  },[seconds,running])\r\n\r\n  return (\r\n    <div className='w-screen h-screen flex items-center justify-center align-middle'>\r\n      \r\n      <div className='container w-1/2 h-3/4 p-6 m-auto shadow '>\r\n      <h1 className='text-3xl justify-center text-center mb-4'>Write Like The Wind</h1>\r\n        {!(running||paused) ?\r\n        <div id='input-row' className='flex flex-row w-full align-middle justify-center items-center mb-6 h-12'>\r\n          <input onChange={(e)=>setTime(e.target.value)} type='number' max={60} value={time} className={`inline-flex input input-bordered w-12 pr-1 mx-2 ${(running||paused) && `bg-gray-200`}`} readOnly={(running||paused)}/> \r\n          <div className='inline-flex align-middle'>{parseInt(time)===1 ? 'minute' : 'minutes'}</div>\r\n        </div>\r\n        :\r\n        <div className='flex flex-row w-full align-middle justify-center items-center mb-6 h-12'>\r\n          {((running||paused) && seconds > 0) ? (\r\n          seconds>59 ? `${(Math.floor(seconds/60)<10) ? `0`:``}${Math.floor(seconds /60)}:${(seconds%60<10) ? `0`:``}${seconds % 60}`: `00:${seconds}`\r\n        ): '00:00'\r\n        }\r\n        </div>\r\n        }\r\n        <div id='button-row' className='flex flex-row w-full align-middle justify-center items-center mb-6'>\r\n          {(running||paused) ?\r\n          <button onClick={()=>{setTime(0);setSeconds(0);setRunning(false);setCompleted(null);togglePaused(false)}} className='inline-flex btn btn-error mx-2' disabled={!(running||paused)}>Stop</button>\r\n          :\r\n          <button onClick={()=>{setText('');setSeconds(time*60);setRunning(true);setCompleted(false);togglePaused(false)}} className='inline-flex btn btn-primary mx-2' disabled={time===0}>Start</button>\r\n          }\r\n          <button onClick={()=>{setRunning(()=>!running);togglePaused(()=>!paused)}} className='inline-flex btn btn-primary mx-2' disabled={!(running||paused)}>{paused ? 'Resume' : 'Pause'}</button>\r\n          <button onClick={()=>{setTime(0);setSeconds(0);setRunning(false);setCompleted(null);copyText();togglePaused(false);setCount(0);setText('');}} className='inline-flex btn btn-outline btn-accent mx-2'>Reset</button>\r\n        </div>\r\n        <div id='status' className='items-center align-middle justify-center'>\r\n        \r\n        {/* <div className='flex flex-row w-full items-center align-middle justify-center'>{running && 'Running!'}{paused && 'Paused!'}{completed && 'Completed!'}</div> */}\r\n        <div className='flex flex-row w-full items-center align-middle justify-center'>\r\n          <div className='inline-flex'>{`${count} words`}</div>\r\n          <button onClick={() => copyText()} className='inline-flex btn btn-ghost mx-1 px-1 py-1' disabled={text.length <= 0}>{copyLabel}</button>\r\n        </div>\r\n        </div>\r\n        <div id='editor-row' className='flex flex-row w-full h-full overflow-hidden'>\r\n          {/* <div onChange={(e)=> setText(...text, e.target.value)} id='editor' contentEditable className='h-full w-full'>{text}</div> */}\r\n          <textarea onChange={(e)=>setText(()=>e.target.value)} placeholder={running ? 'Get started!' : 'Start the timer to begin writing!'} value={text} className={`flex flex-row h-1/2 w-full overflow-y-scroll my-4 shadow-sm textarea textarea-bordered  ${!running && `bg-gray-200`}`} readOnly={!running}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}